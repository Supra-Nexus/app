name: CI - Main Branch

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Quick validation checks
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run typecheck --if-present
      
      - name: Lint
        run: npm run lint --if-present
      
      - name: Format check
        run: npm run format:check --if-present || true

  # Test Suite
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test --if-present
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        continue-on-error: true

  # Desktop Build Matrix
  build-desktop:
    name: Build Desktop (${{ matrix.platform }})
    needs: validate
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            target: 'aarch64-apple-darwin'
          - platform: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
    
    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev
      
      - name: Build desktop app
        working-directory: apps/zoo-desktop
        run: npm run build
      
      - name: Build Tauri app
        working-directory: apps/zoo-desktop
        run: npm run tauri build -- --target ${{ matrix.target }}

  # Mobile Build Checks (validation only, not full builds)
  validate-mobile:
    name: Validate Mobile Config
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check iOS config
        working-directory: apps/zoo-desktop
        run: |
          if [ -f "src-tauri/tauri.ios.conf.json" ]; then
            echo "iOS config exists"
            cat src-tauri/tauri.ios.conf.json | jq empty
          fi
      
      - name: Check Android config
        working-directory: apps/zoo-desktop
        run: |
          if [ -f "src-tauri/tauri.android.conf.json" ]; then
            echo "Android config exists"
            cat src-tauri/tauri.android.conf.json | jq empty
          fi

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Run audit
        run: npm audit --audit-level=high || true
      
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          extra_args: --debug --only-verified